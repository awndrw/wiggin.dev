@use "theme/scss/color";
@use "theme/scss/size";
@use "theme/scss/util";
@use "sass:list";

$radial-gradient: radial-gradient(
  #{color.$background},
  transparent var(--radial-distance)
);
$conic-gradient: conic-gradient(#{util.gradient-steps()});
$linear-gradient: linear-gradient(to right, #{util.gradient-steps()});

.wrapper {
  &::before {
    display: none !important;
  }

  &:not(:has(:focus-visible))::after {
    display: none;
  }
  &:has(:focus-visible)::after {
    display: block;
  }
}

.customHueSelector {
  --radial-distance: 190%;
  position: relative;
  background: color.$accent-tint-contrast;
  -webkit-tap-highlight-color: transparent;
  background: $radial-gradient, $conic-gradient;

  &::before {
    --radial-distance: 60%;
    content: "";
    position: absolute;
    inset: -2px;
    z-index: -1;
    border-radius: 20px;
    background: $radial-gradient, $conic-gradient;
  }

  &:not(:focus-visible) .focusIndicator {
    display: none;
  }
  &:focus-visible .focusIndicator {
    display: block;
  }
}

.focusIndicator {
  position: absolute;
  inset: -7px;
  z-index: -1;
  border-radius: 20px;
  clip-path: polygon(
    5px 5px,
    5px 29px,
    7px 29px,
    7px 7px,
    27px 7px,
    27px 27px,
    7px 27px,
    7px 29px,
    29px 29px,
    29px 5px
  );
  animation: rotate 6s linear infinite;
}

.focusIndicatorInner {
  width: 100%;
  height: 100%;
  transition: transform 2s ease;
  background: $conic-gradient;
  animation: rotate 6s linear infinite reverse;
}

@keyframes rotate {
  0% {
    transform: rotate(0);
  }
  100% {
    transform: rotate(360deg);
  }
}

.customHueSelectorIndicator {
  position: absolute;
  inset: 0;
  transition: transform 2s ease;
  clip-path: inset(-2px 9px 45% 45% round size.$border-radius-small);
}

.customHueSelectorIndicatorInner {
  --radial-distance: 60%;
  width: 100%;
  height: 100%;
  transition: transform 2s ease;
  background: $radial-gradient, $conic-gradient;
}

.popoverContent {
  display: flex;
  gap: size.$spacing-small;
  border-radius: size.$border-radius-small;
  padding: 6px 12px;
  background-color: color.$accent-container-contrast;
  box-shadow: 2px 8px 14px 0 hsla(206, 22%, 7%, 0.35),
    0 10px 10px -5px hsla(206, 22%, 7%, 0.2);
  animation-duration: 400ms;
  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
  will-change: transform, opacity;
  z-index: 4;

  &[data-state="open"] {
    animation-name: slideDownAndFade;
  }
}

.sliderRoot {
  position: relative;
  display: flex;
  align-items: center;
  user-select: none;
  touch-action: none;
  width: 200px;
  height: 20px;
}

.sliderTrack {
  background: $linear-gradient;
  position: relative;
  flex-grow: 1;
  border-radius: size.$border-radius-small;
  height: 3px;
}

.sliderThumb {
  display: block;
  width: 20px;
  height: 20px;
  border-radius: size.$border-radius-small;
  border: 1px solid color.$accent-primary;

  &:not(:hover) {
    background-color: color.$accent-tint-contrast;
  }

  &:hover {
    background-color: color.$accent-tint;
  }
}

.output {
  font-variant-numeric: tabular-nums;
  display: grid;
  place-content: center;
  width: 35px;
  font-family: monospace;
}

.popoverArrow {
  fill: color.$accent-container-contrast;
}

@keyframes slideDownAndFade {
  from {
    opacity: 0;
    transform: translateY(-2px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
