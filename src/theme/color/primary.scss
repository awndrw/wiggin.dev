@use 'sass:map';
@use './base';

$colors: (
        'blue': (
                0: #000000,
                10: #001d35,
                20: #003256,
                30: #00497a,
                40: #0062a0,
                50: #2d7bbd,
                60: #4d95d9,
                70: #6bb0f5,
                80: #9ccaff,
                90: #d0e4ff,
                95: #e9f1ff,
                99: #fcfcff,
                100: #ffffff,
        ),
        'green': (
                0: #000000,
                10: #002116,
                20: #003829,
                30: #00513c,
                40: #006c51,
                50: #008767,
                60: #1fa37e,
                70: #46bf98,
                80: #65dbb3,
                90: #83f8ce,
                95: #bbffe2,
                99: #f4fff7,
                100: #ffffff,
        ),
        'red': (
                0: #000000,
                10: #410006,
                20: #601216,
                30: #7f292a,
                40: #9e4040,
                50: #bd5757,
                60: #dd706e,
                70: #fd8a87,
                80: #ffb3b0,
                90: #ffdad8,
                95: #ffedeb,
                99: #fffbfb,
                100: #ffffff,
        )
);

$modes: (
        'light': (
                'text': 40,
                'background': 99,
                'container-text': 10,
                'container-background': 90,
        ),
        'dark': (
                'text': 80,
                'background': 20,
                'container-text': 90,
                'container-background': 30,
        ),
);

@mixin make($color, $mode) {
  @if map.has-key($colors, $color) and map.has-key($modes, $mode) {
    @each $color-name, $tone in map.get($modes, $mode) {
      $var: map.get(base.$obfuscated-vars, $color-name);
      $hex: map.get($colors, $color, $tone);
      --#{$var}: #{$hex};
    }
  } @else {
    @warn "Color or mode not found: #{$color}, #{$mode}";
  }
}

@mixin make-defaults($color) {
  @if map.has-key($colors, $color) {
    @include make($color, 'light');
    @media (prefers-color-scheme: dark) {
      @include make($color, 'dark');
    }
  } @else {
    @warn "Color not found: #{$color}";
  }
}

@mixin init {
  @each $color in map.keys($colors) {
    @at-root body.#{$color} {
      @include make-defaults($color);
      @each $mode in map.keys($modes) {
        &.#{$mode} {
          @include make($color, $mode);
        }
      }
    }
    // Create local theme (by applying the color to a specific element)
    @at-root *.#{$color} {
      @include make-defaults($color);
      @each $mode in map.keys($modes) {
        body.#{$mode} & {
          @include make($color, $mode);
        }
      }
    }
  }
}
