@use 'sass:map';
@use 'sass:list';
@use 'sass:color';

$hues: (
  'red': 354,
  'blue': 203,
  'green': 143
);

$colors: map.keys($hues);

$hslValues: (
        'light': (
                'primary': 42% 44%,
                'primary-contrast': 100% 99%,
                'secondary': 100% 13%,
                'secondary-contrast': 100% 92%,
                'tertiary': 100% 97%,
                'tertiary-variant': 100% 100%,
        ),
        'dark': (
                'primary': 100% 85%,
                'primary-contrast': 68% 22%,
                'secondary': 100% 92%,
                'secondary-contrast': 51% 33%,
                'tertiary': 20% 17%,
                'tertiary-variant': 45% 8%,
        ),
);

@mixin make-theme($color, $mode) {
  @if map.has-key($hues, $color) and map.has-key($hslValues, $mode) {
    @each $color-name, $saturation-lightness in map.get($hslValues, $mode) {
      $hue: map.get($hues, $color);
      $saturation: list.nth($saturation-lightness, 1);
      $lightness: list.nth($saturation-lightness, 2);
      $hsl: hsl($hue $saturation $lightness);
      --color-accent-#{$color-name}: #{$hsl};
      // display p3
      $red: color.red($hsl) / 255;
      $green: color.green($hsl) / 255;
      $blue: color.blue($hsl) / 255;
      --color-accent-#{$color-name}: color(display-p3 #{$red} #{$green} #{$blue});
    }
  } @else {
    @warn "Color or mode not found: #{$color}, #{$mode}";
  }
}
